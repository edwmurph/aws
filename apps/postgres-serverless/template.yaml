Transform: AWS::Serverless-2016-10-31

Parameters:
  DBName:
    Description: Name of the initial database
    Type: String
    Default: postgres
  DBUsername:
    NoEcho: true
    Description: Master username for the database
    Type: String
    Default: postgres
  DBPassword:
    NoEcho: true
    Description: Master password for the database
    Type: String
    Default: postgres

Resources:
  PostgresCluster:
    Type: 'AWS::RDS::DBCluster'
    DeletionPolicy: Delete
    Properties:
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 1
      DatabaseName: !Ref DBName
      DBClusterIdentifier: !Ref DBName
      DBSubnetGroupName: !ImportValue vpc-PrivateSubnetGroup
      DeletionProtection: false
      Engine: aurora-postgresql
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      NetworkType: IPV4
      Port: 5432
      PreferredBackupWindow: '06:00-07:00'
      PreferredMaintenanceWindow: 'Sun:07:00-Sun:08:00'
      ServerlessV2ScalingConfiguration:
        MinCapacity: 0.5
        MaxCapacity: 1.0
      StorageEncrypted: true
      VpcSecurityGroupIds:
        - !Ref SecurityGroup

  PrimaryInstance:
   Type: 'AWS::RDS::DBInstance'
   DependsOn: PostgresCluster
   DeletionPolicy: Delete
   Properties:
     DBClusterIdentifier: !Ref DBName
     DBInstanceClass: db.serverless
     Engine: aurora-postgresql

  ReplicaInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    DependsOn: PostgresCluster
    Properties:
      DBClusterIdentifier: !Ref DBName
      DBInstanceClass: db.serverless
      Engine: aurora-postgresql
      SourceDBInstanceIdentifier: !Ref PrimaryInstance

  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group for Postgres
      VpcId: !ImportValue vpc-VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !ImportValue vpc-VPCCIDR

Outputs:
  PrimaryEndpoint:
    Description: Primary Endpoint
    Value: !GetAtt PostgresCluster.Endpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}-PrimaryEndpoint"
  ReadEndpoint:
    Description: Read Endpoint
    Value: !GetAtt PostgresCluster.ReadEndpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}-ReadEndpoint"
