Transform: AWS::Serverless-2016-10-31

Parameters:
  DBName:
    Description: Name of the initial database
    Type: String
    Default: postgres
  DBUsername:
    NoEcho: true
    Description: Master username for the database
    Type: String
    Default: postgres
  DBPassword:
    NoEcho: true
    Description: Master password for the database
    Type: String
    Default: postgres
  DBInstanceClass:
    NoEcho: true
    Description: Instance class for postgres
    Type: String
    Default: db.t3.micro

Resources:
  EnhancedMonitoringRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: EnhancedMonitoringRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: monitoring.rds.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole'

  PrimaryInstance:
    Type: 'AWS::RDS::DBInstance'
    DeletionPolicy: Delete
    Properties:
      AllocatedStorage: 20
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 1
      DBInstanceClass: !Ref DBInstanceClass
      DBInstanceIdentifier: !Ref DBName
      DBName: !Ref DBName
      DBSubnetGroupName: !ImportValue vpc-PrivateSubnetGroup
      DeleteAutomatedBackups: true
      DeletionProtection: false
      EnablePerformanceInsights: true
      Engine: postgres
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      MonitoringInterval: 60
      MonitoringRoleArn: !GetAtt EnhancedMonitoringRole.Arn
      MultiAZ: true
      NetworkType: IPV4
      PerformanceInsightsRetentionPeriod: 7
      PreferredBackupWindow: '06:00-07:00'
      PreferredMaintenanceWindow: 'Sun:07:00-Sun:08:00'
      PubliclyAccessible: false
      StorageEncrypted: true
      StorageType: gp3
      VPCSecurityGroups:
        - !Ref SecurityGroup

  ReplicaInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      DBInstanceClass: !Ref DBInstanceClass
      SourceDBInstanceIdentifier: !Ref PrimaryInstance

  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group for Postgres
      VpcId: !ImportValue vpc-VPC

  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      CidrIp: !ImportValue vpc-VPCCIDR

Outputs:
  PrimaryEndpoint:
    Description: Endpoint URL of the primary RDS instance
    Value: !GetAtt PrimaryInstance.Endpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}-PrimaryEndpoint"
  ReplicaEndpoint:
    Description: Endpoint URL of the replica RDS instance
    Value: !GetAtt ReplicaInstance.Endpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}-ReplicaEndpoint"
