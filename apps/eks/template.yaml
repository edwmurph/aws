Transform: AWS::Serverless-2016-10-31

Description: 'Deploys an EKS cluster'

Parameters:
  ClusterName:
    Type: String
    Description: Name of the EKS cluster
    Default: test
  # ContainerPort:
  #   Type: Number
  #   Description: Port on which the container listens
  #   Default: 80

# TODO
# - add ons?
# - use spot instances to save costs
# - define network policy
# - leverage cluster dns
# - use alb
Resources:
  EKSIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy

  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId: !ImportValue vpc-VPC

  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Ref ClusterName
      Version: 1.27
      RoleArn: !GetAtt EKSIAMRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref ControlPlaneSecurityGroup
        SubnetIds:
          - !ImportValue vpc-PublicSubnet1
          - !ImportValue vpc-PublicSubnet2
        EndpointPublicAccess: true
        PublicAccessCidrs:
          - 0.0.0.0/0
      KubernetesNetworkConfig:
        IpFamily: ipv4
        ServiceIpv4Cidr: 10.100.0.0/16
